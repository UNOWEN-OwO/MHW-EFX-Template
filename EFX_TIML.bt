//------------------------------------------------
//--- 010 Editor v9.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
string ReadDataInt(int32 r) {
    string s;
    SPrintf(s, "%08X | %d ", r,r);
    return s;
}

typedef struct{
    float dataF;
    FSkip(-4);
    int32 dataI;
    float bounceForwardLimit;
    float bounceBackwardsLimit;
    float frameTiming;
    short easingMethod<comment = "0 - Binary (Stuck), 1 - Constant, (2 - Linear, 3 - Cuadratic) Known to Work, 4 - Cubic">;
    short interpolationType1<comment = "2 - Only Functional">;
}TIML_Keyframe;

typedef struct(int base){
    int64 offset;
    int64 count;
    int32 datatypeHash<format=hex, comment="Hash to determine the transform type (rot:X, pos:Z, Etc).", bgcolor = 0xFFFF00>;
    int32 dataType;
    local int pos = FTell();
    FSeek(base+offset);
    TIML_Keyframe keyframes[count]<optimize = false, bgcolor = 0xFF4444>;
    FSeek(pos);
}TIML_Transform;

typedef struct(int base){
    int64 offset;
    int64 count;
    int32 timelineParameterHash<format=hex, comment="Hash to determine if it affects a mesh or a materials, etc.", bgcolor = 0xFFFF44>;
    int32 NULL;
    local int pos = FTell();
    FSeek(base+offset);
    TIML_Transform transforms(base)[count]<optimize = false, bgcolor = 0xFF6666>;
    FSeek(pos);
}TIML_Type;

typedef struct(int base){
    int64 offset;
    int64 count;
    int32 unkn1;
    int32 unkn2;
    float animationLength;
    float loopStartPoint;
    int loopControl<comment="Determines how and if it will loop">;
    int labelHash<format=hex, comment="Label Hash",bgcolor = 0xFFFF88>;
    local int pos = FTell();
    FSeek(base+offset);
    TIML_Type types(base)[count]<optimize = false, bgcolor = 0xFF8888>;
    FSeek(pos);
}TIML_Data;

typedef struct(int base){
    int64 offset;
    if (offset > 0){
        local int pos = FTell();
        FSeek(base+offset);
        TIML_Data data(base)<optimize = false, bgcolor = 0xFFBBBB>;
        FSeek(pos);
    }
}TIML_Body;

typedef struct{
    local int base;
    base = FTell();
    char timl[4];
    int signature[3]<comment = "402786304,402786304,0">;
    int enabled<comment = "20">;
    int NULL<comment = "0">;
    int32 count;
    if (count > 0) int32 NULL2;
    TIML_Body animations(base)[count]<optimize = false, bgcolor = 0xFFCCCC>;    
}TIML_Header;

typedef struct {
    local int base;
    base = FTell();
    TIML_Header Header<bgcolor = 0xFFFFFF>;
    FSeek(base+timl_length);
}Timl;